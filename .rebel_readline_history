1583425667402::repl/help
1583577183243:(doc assoc-in)
1583578094487:(get-in [booking-form] [:div :class]\n        )
1583578123083:(get-in booking-form [:div :class])
1583578143359:(get-in (booking-form) [:div :class])
1583580389534:(booking-handler "is-active")
1583580431096:(use 'core)
1583580453932:(use 'core.cljs)
1583580462439:(require 'core)
1583580533983:(booking-form)
1583580538743:[booking-form]
1583580550177:help
1583580554406::help
1583580741237:(defn booking-form\n  []\n  [:div {:class "modal"}\n   [:div {:class "modal-background"}]\n   [:div {:class "modal-content"}]\n   [:button {:class "modal-close is-large" :aria-label "close"}]])
1583580882204:(conj (assoc (first (booking-form))\n             :class\n             (str (get (first (booking-form) :class) " is-active"))))
1583580971233:(conj (assoc (first [booking-form])\n             :class\n             (str (get (first [booking-form] :class) " is-active"))))
1583582808262:(conj (assoc (first [booking-form])\n             :class\n             (str (get (first booking-form) :class) " is-active"))))
1583582815203:(conj (assoc (first [booking-form])\n             :class\n             (str (get (first booking-form) :class) " is-active")))
1583582842212:(conj (assoc (first [booking-form])\n             :class\n             (str (get (first booking-form) :class) " is-active")\n             )\n      )
1583582929849:(conj (assoc (first (booking-form))\n             :class\n             (str (get (first booking-form)) :class) " is-active")\n             )\n      )
1583582947581:(conj (assoc (first (booking-form))\n             :class\n             (str (get (first booking-form)) :class) " is-active")\n             )
1583582996909:(conj (assoc (first (vec (booking-form)))\n             :class\n             (str (get (first (vec (booking-form))) :class) " is-active")))
1583583038439:(conj (assoc (first (map (booking-form)))\n             :class\n             (str (get (first (map (booking-form))) :class) " is-active")))
1583583126030:(conj (into [] (assoc (first (map (booking-form)))\n             :class\n             (str (get (first (map (booking-form))) :class) " is-active"))))
1583592963781:(doc update)
1583593204424:(defonce book (reagent.core/atom {:status false}))
1583593260459:(doc swap!)
1583593622134:(defn bswap [& get]\n  (let [status (get @booking :status)]\n    ([] (swap! booking #(not status)))\n    ([get] (status))))
1583593657320:(defn bswap [& get]\n  (let [status (get @booking :status)]\n    ([] (swap! book #(not status)))\n    ([get] (status))))
1583593671772:(defn bswap [& get]\n  (let [status (get @book :status)]\n    ([] (swap! book #(not status)))\n    ([get] (status))))
1583593678687:book
1583593684541:@book
1583593693577:(get @book :status)
1583593710453:bswap
1583593716879:(expand bswap)
1583593728892:(bswap)
1583593762755:(source bswap)
1583593771404:(bswap)
1583593809653:(def book (reagent.core/atom {:status false}))
1583593817770:(bswap book)
1583593931291:(defn bswap [& get]\n  (let [status (get @book :status)]\n    ([] (swap! book #(not (get @book :status))))\n    ([get] status)))
1583593941796:bswap
1583593946789:(bswap)
1583593965315:(source bswap)
1583593979228:(use 'cljs.user)
1583593994778:(bswap "h")
1583594008426:(doc get)
1584480590242:(doc get-in)
1584481456789:(doc for)
